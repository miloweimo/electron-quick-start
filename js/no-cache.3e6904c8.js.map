{"version":3,"sources":["webpack:///./src/modules/no-cache/index.vue","webpack:///src/modules/no-cache/index.vue","webpack:///./src/modules/no-cache/index.vue?5d99","webpack:///./src/modules/no-cache/index.vue?8db9"],"names":["render","_vm","this","_c","_self","staticClass","_v","_s","json","staticRenderFns","data","result","axios","get","status","component"],"mappings":"iHAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,KAAK,CAACF,EAAIK,GAAG,cAAcH,EAAG,IAAI,CAACF,EAAIK,GAAG,iCAAiCH,EAAG,MAAM,CAACF,EAAIK,GAAG,mTAAmTH,EAAG,IAAI,CAACF,EAAIK,GAAG,SAASL,EAAIM,GAAGN,EAAIO,YAEnhBC,EAAkB,G,qBCiBP,GACfC,OACA,OACAF,KAAA,KAGA,gBAEA,MAAAG,QAAAC,IAAAC,IAAA,eACA,MAAAF,EAAAG,SACA,KAAAN,KAAAG,EAAAD,QC7B2X,I,YCOvXK,EAAY,eACd,EACAf,EACAS,GACA,EACA,KACA,WACA,MAIa,aAAAM,E","file":"js/no-cache.3e6904c8.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"pa-4\"},[_c('h1',[_vm._v(\"no-cache\")]),_c('p',[_vm._v(\"读取public里的josn文件，文件修改，刷新会变化\")]),_c('pre',[_vm._v(\"    添加特定的请求头：在 HTTP 请求中设置适当的头部信息，例如 Cache-Control 头部，设置为 no-cache 或其他类似的值，指示浏览器不要缓存该请求。\\n    修改 URL：每次请求时使用唯一的 URL，使浏览器认为它是一个新的请求，而不是缓存中的请求。\\n    使用随机参数：在 URL 中添加随机参数，使其每次都不同。\\n    设置过期时间：通过设置较短的过期时间，确保浏览器不会长时间缓存请求。\\n    禁用浏览器缓存：在浏览器设置中完全禁用缓存，但这可能会对性能产生影响。\\n    实时更新数据：如果可能，确保返回的数据始终是最新的，以避免缓存的需要。\\n  \")]),_c('p',[_vm._v(\"data: \"+_vm._s(_vm.json))])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"pa-4\">\n    <h1>no-cache</h1>\n    <p>读取public里的josn文件，文件修改，刷新会变化</p>\n    <pre>\n      添加特定的请求头：在 HTTP 请求中设置适当的头部信息，例如 Cache-Control 头部，设置为 no-cache 或其他类似的值，指示浏览器不要缓存该请求。\n      修改 URL：每次请求时使用唯一的 URL，使浏览器认为它是一个新的请求，而不是缓存中的请求。\n      使用随机参数：在 URL 中添加随机参数，使其每次都不同。\n      设置过期时间：通过设置较短的过期时间，确保浏览器不会长时间缓存请求。\n      禁用浏览器缓存：在浏览器设置中完全禁用缓存，但这可能会对性能产生影响。\n      实时更新数据：如果可能，确保返回的数据始终是最新的，以避免缓存的需要。\n    </pre>\n    <p>data: {{ json }}</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      json: ''\n    }\n  },\n  async mounted() {\n    // const result = await axios.get('config.json' + '?t=' + new Date().getTime()) // 修改 URL：每次请求时使用唯一的 URL，使浏览器认为它是一个新的请求，而不是缓存中的请求\n    const result = await axios.get('config.json')\n    if (result.status === 200) {\n      this.json = result.data\n    }\n  },\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=1e8e841f&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1e8e841f\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}