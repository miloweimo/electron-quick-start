(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["no-cache"],{d40d:function(n,a,t){"use strict";t.r(a);var s=function(){var n=this,a=n._self._c;return a("div",{staticClass:"pa-4"},[a("h1",[n._v("no-cache")]),a("p",[n._v("读取public里的josn文件，文件修改，刷新会变化")]),a("pre",[n._v("    添加特定的请求头：在 HTTP 请求中设置适当的头部信息，例如 Cache-Control 头部，设置为 no-cache 或其他类似的值，指示浏览器不要缓存该请求。\n    修改 URL：每次请求时使用唯一的 URL，使浏览器认为它是一个新的请求，而不是缓存中的请求。\n    使用随机参数：在 URL 中添加随机参数，使其每次都不同。\n    设置过期时间：通过设置较短的过期时间，确保浏览器不会长时间缓存请求。\n    禁用浏览器缓存：在浏览器设置中完全禁用缓存，但这可能会对性能产生影响。\n    实时更新数据：如果可能，确保返回的数据始终是最新的，以避免缓存的需要。\n  ")]),a("p",[n._v("data: "+n._s(n.json))])])},c=[],o=t("bc3a"),e=t.n(o),i={data(){return{json:""}},async mounted(){const n=await e.a.get("config.json");200===n.status&&(this.json=n.data)}},u=i,p=t("2be6"),r=Object(p["a"])(u,s,c,!1,null,"1e8e841f",null);a["default"]=r.exports}}]);
//# sourceMappingURL=no-cache.3e6904c8.js.map